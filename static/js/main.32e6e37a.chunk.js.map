{"version":3,"sources":["redux/phonebook-types.js","redux/phonebook-reducer.js","redux/store.js","redux/phonebook-actions.js","components/AddContact/AddContactForm.styled.jsx","components/Button/Button.styled.jsx","components/AddContact/AddContact.jsx","components/Contacts/FindContact.jsx","components/Contacts/Contacts.styled.jsx","components/Button/Button.jsx","components/Contacts/ContactList.jsx","components/Section/Section.jsx","components/App/App.styled.jsx","App.jsx","index.js"],"names":["items","createReducer","types","state","action","payload","filter","id","_","combineReducers","phonebookPersistConfig","key","storage","localStorage","blacklist","store","configureStore","reducer","phonebook","persistReducer","phonebookReducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","addContact","createAction","name","number","uuidv4","deleteContact","filterContact","Form","styled","form","Input","input","Label","label","ButtonPhonebook","button","connect","dispatch","onSubmit","useState","setName","setNumber","reset","e","currentTarget","value","preventDefault","inputForms","map","type","pattern","title","required","htmlFor","placeholder","onChange","event","handleChange","target","FindContact","useDispatch","ItemListContact","li","ItemContact","span","List","ul","Button","onClick","ContactList","contacts","useSelector","getListContact","allContacts","normalizedFilter","toLowerCase","contact","includes","Section","children","Container","div","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.32e6e37a.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nexport default {\r\n  ADD: 'phonebook/add',\r\n  DELETE: 'phonebook/delete',\r\n  FILTER: 'phonebook/delete',\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport types from './phonebook-types';\r\n\r\nconst items = createReducer([], {\r\n  [types.ADD]: (state, action) => [...state, action.payload],\r\n  [types.DELETE]: (state, action) =>\r\n    state.filter(({ id }) => id !== action.payload),\r\n});\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nconst filter = createReducer('', {\r\n  [types.FILTER]: (_, action) => action.payload,\r\n});\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport localStorage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './phonebook-reducer';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst phonebookPersistConfig = {\r\n  key: 'phonebook',\r\n  storage: localStorage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\n// const persistedReducer = persistReducer(phonebookPersistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport types from './phonebook-types';\r\n\r\nexport const addContact = createAction(types.ADD, (name, number) => {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n// const addContact = (name, number) => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// });\r\n\r\nexport const deleteContact = createAction(types.DELETE);\r\n// const deleteContact = todoId => ({\r\n//   type: types.DELETE,\r\n//   payload: todoId,\r\n// });\r\n\r\nexport const filterContact = createAction(types.FILTER);\r\n// const filterContact = value => ({\r\n//   type: types.FILTER,\r\n//   payload: value,\r\n// });\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  width: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-transform: capitalize;\r\n  border: 2px solid #333333;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 10px;\r\n  border: 1px solid rgb(42, 136, 136);\r\n  outline: none;\r\n  &: focus {\r\n    border: 5px solid rgb(42, 136, 136);\r\n  } ;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  padding: 15px 15px 0px 15px;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ButtonPhonebook = styled.button`\r\n  padding: 10px;\r\n  width: 150px;\r\n  margin: 20px 15px 15px 15px;\r\n  border: 1px solid rgb(42, 136, 136);\r\n\r\n  &:focus {\r\n    background-color: rgb(42, 136, 136);\r\n    color: white;\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/phonebook-actions';\r\nimport inputForms from '../data/inputForms.json';\r\nimport { Form } from './AddContactForm.styled';\r\nimport { Label } from './AddContactForm.styled';\r\nimport { Input } from './AddContactForm.styled';\r\nimport { ButtonPhonebook } from '../Button/Button.styled';\r\n\r\nexport function AddContact({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = ({ name }, value) => {\r\n    switch (name) {\r\n      case 'name':\r\n        setName(() => value);\r\n        break;\r\n      case 'number':\r\n        setNumber(() => value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    reset(e);\r\n  };\r\n  const reset = e => {\r\n    setName('');\r\n    setNumber('');\r\n    e.currentTarget.name.value = '';\r\n    e.currentTarget.number.value = '';\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      {inputForms.map(({ id, type, name, pattern, title, required }) => (\r\n        <Label htmlFor={id} key={name}>\r\n          <h3>{name}</h3>\r\n          <Input\r\n            id={id}\r\n            type={type}\r\n            name={name}\r\n            pattern={pattern}\r\n            title={title}\r\n            required={required}\r\n            placeholder={name}\r\n            onChange={event => handleChange({ name }, event.target.value)}\r\n          />\r\n        </Label>\r\n      ))}\r\n      <ButtonPhonebook type=\"submit\">Add contact</ButtonPhonebook>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(AddContact);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { filterContact } from '../../redux/phonebook-actions';\r\nimport { Input } from '../AddContact/AddContactForm.styled';\r\n\r\nexport function FindContact({ title }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <h3>{title}</h3>\r\n      <Input\r\n        type=\"text\"\r\n        onChange={e => dispatch(filterContact(e.target.value))}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFindContact.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(FindContact);\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ItemListContact = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  list-style: none;\r\n`;\r\n\r\nexport const ItemContact = styled.span`\r\n  min-width: 150px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  padding: 0px;\r\n  font-size: 20px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ButtonPhonebook } from './Button.styled';\r\n\r\nexport const Button = ({ title, type, onClick }) => (\r\n  <ButtonPhonebook type={type} onClick={onClick}>\r\n    {title}\r\n  </ButtonPhonebook>\r\n);\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { ItemContact } from './Contacts.styled';\r\nimport { ItemListContact } from './Contacts.styled';\r\nimport { Button } from '../Button/Button';\r\nimport { List } from './Contacts.styled';\r\nimport { deleteContact } from '../../redux/phonebook-actions';\r\n\r\nexport function ContactList() {\r\n  const contacts = useSelector(state =>\r\n    getListContact(state.phonebook.items, state.phonebook.filter),\r\n  );\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <List>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ItemListContact key={id}>\r\n          <ItemContact>{name}:</ItemContact>\r\n          <ItemContact>{number}</ItemContact>\r\n          <Button\r\n            title={'Delete'}\r\n            type=\"button\"\r\n            onClick={() => dispatch(deleteContact(id))}\r\n          />\r\n        </ItemListContact>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  phonebook: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.func,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nconst getListContact = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nexport default connect(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Section = ({ title, children }) => (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  padding: 15px;\r\n`;\r\n","import AddContact from './components/AddContact/AddContact';\r\nimport { FindContact } from './components/Contacts/FindContact';\r\nimport { ContactList } from './components/Contacts/ContactList';\r\nimport { Section } from './components/Section/Section';\r\nimport { Container } from './components/App/App.styled';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container>\r\n      <Section title={'Phonebook'}>\r\n        <AddContact />\r\n      </Section>\r\n      <FindContact title={'Find contact by name'} />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
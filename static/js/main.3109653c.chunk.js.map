{"version":3,"sources":["redux/phonebook-reducer.js","redux/store.js","redux/phonebook-actions.js","components/AddContact/AddContactForm.styled.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/AddContact/AddContact.jsx","components/Contacts/FindContact.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/ContactList.jsx","components/Section/Section.jsx","components/App/App.styled.jsx","App.jsx","index.js"],"names":["items","createReducer","state","action","payload","filter","id","_","combineReducers","persistConfig","key","storage","localStorage","rootReducer","phonebook","phonebookReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","addContact","createAction","name","number","uuidv4","deleteContact","filterContact","Form","styled","form","Input","input","Label","label","ButtonPhonebook","button","Button","title","type","connect","dispatch","onSubmit","useState","setName","setNumber","reset","e","currentTarget","value","preventDefault","inputForms","map","pattern","required","htmlFor","placeholder","onChange","event","handleChange","target","FindContact","useDispatch","ItemListContact","li","ItemContact","span","List","ul","ContactList","contacts","useSelector","getListContact","onClick","allContacts","normalizedFilter","toLowerCase","contact","includes","Section","children","Container","div","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.3109653c.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// import types from './phonebook-types';\r\n\r\nconst items = createReducer([], {\r\n  'phonebook/add': (state, action) => [...state, action.payload],\r\n  'phonebook/delete': (state, action) =>\r\n    state.filter(({ id }) => id !== action.payload),\r\n});\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\nconst filter = createReducer('', {\r\n  'phonebook/filter': (_, action) => action.payload,\r\n});\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport localStorage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from './phonebook-reducer';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst persistConfig = {\r\n  key: 'phonebook',\r\n  storage: localStorage,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  phonebook: phonebookReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n// import types from './phonebook-types';\r\n\r\nconst addContact = createAction('phonebook/add', (name, number) => {\r\n  return {\r\n    payload: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  };\r\n});\r\n// const addContact = (name, number) => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: uuidv4(),\r\n//     name,\r\n//     number,\r\n//   },\r\n// });\r\n\r\nconst deleteContact = createAction('phonebook/delete');\r\n// const deleteContact = todoId => ({\r\n//   type: types.DELETE,\r\n//   payload: todoId,\r\n// });\r\n\r\nconst filterContact = createAction('phonebook/filter');\r\n// const filterContact = value => ({\r\n//   type: types.FILTER,\r\n//   payload: value,\r\n// });\r\n\r\nexport { addContact, deleteContact, filterContact };\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  width: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-transform: capitalize;\r\n  border: 2px solid #333333;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 10px;\r\n  border: 1px solid rgb(42, 136, 136);\r\n  outline: none;\r\n  &: focus {\r\n    border: 5px solid rgb(42, 136, 136);\r\n  } ;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  padding: 15px 15px 0px 15px;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ButtonPhonebook = styled.button`\r\n  padding: 10px;\r\n  width: 150px;\r\n  margin: 20px 15px 15px 15px;\r\n  border: 1px solid rgb(42, 136, 136);\r\n\r\n  &:focus {\r\n    background-color: rgb(42, 136, 136);\r\n    color: white;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ButtonPhonebook } from './Button.styled';\r\n\r\nexport const Button = ({ title, type }) => (\r\n  <ButtonPhonebook type={type}>{title}</ButtonPhonebook>\r\n);\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n};\r\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/phonebook-actions';\r\nimport inputForms from '../data/inputForms.json';\r\nimport { Form } from './AddContactForm.styled';\r\nimport { Label } from './AddContactForm.styled';\r\nimport { Input } from './AddContactForm.styled';\r\nimport { Button } from '../Button/Button';\r\n\r\nexport function AddContact({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = ({ name }, value) => {\r\n    switch (name) {\r\n      case 'name':\r\n        setName(() => value);\r\n        break;\r\n      case 'number':\r\n        setNumber(() => value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    reset(e);\r\n  };\r\n  const reset = e => {\r\n    setName('');\r\n    setNumber('');\r\n    e.currentTarget.name.value = '';\r\n    e.currentTarget.number.value = '';\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      {inputForms.map(({ id, type, name, pattern, title, required }) => (\r\n        <Label htmlFor={id} key={name}>\r\n          <h3>{name}</h3>\r\n          <Input\r\n            id={id}\r\n            type={type}\r\n            name={name}\r\n            pattern={pattern}\r\n            title={title}\r\n            required={required}\r\n            placeholder={name}\r\n            onChange={event => handleChange({ name }, event.target.value)}\r\n          />\r\n        </Label>\r\n      ))}\r\n      <Button title=\"Add contact\" type=\"submit\" />\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(AddContact);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { filterContact } from '../../redux/phonebook-actions';\r\nimport { Input } from '../AddContact/AddContactForm.styled';\r\n\r\nexport function FindContact({ title }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <h3>{title}</h3>\r\n      <Input\r\n        type=\"text\"\r\n        onChange={e => dispatch(filterContact(e.target.value))}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFindContact.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(FindContact);\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ItemListContact = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  list-style: none;\r\n`;\r\n\r\nexport const ItemContact = styled.span`\r\n  min-width: 150px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  padding: 0px;\r\n  font-size: 20px;\r\n`;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { ItemContact } from './Contacts.styled';\r\nimport { ItemListContact } from './Contacts.styled';\r\nimport { Button } from '../Button/Button';\r\nimport { List } from './Contacts.styled';\r\nimport { deleteContact } from '../../redux/phonebook-actions';\r\n\r\nexport function ContactList() {\r\n  const contacts = useSelector(state =>\r\n    getListContact(state.phonebook.items, state.phonebook.filter),\r\n  );\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <List>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ItemListContact key={id}>\r\n          <ItemContact>{name}:</ItemContact>\r\n          <ItemContact>{number}</ItemContact>\r\n          <Button\r\n            title={'Delete'}\r\n            type=\"button\"\r\n            onClick={() => dispatch(deleteContact(id))}\r\n          />\r\n        </ItemListContact>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  phonebook: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.func,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nconst getListContact = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nexport default connect(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Section = ({ title, children }) => (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  padding: 15px;\r\n`;\r\n","import AddContact from './components/AddContact/AddContact';\r\nimport { FindContact } from './components/Contacts/FindContact';\r\nimport { ContactList } from './components/Contacts/ContactList';\r\nimport { Section } from './components/Section/Section';\r\nimport { Container } from './components/App/App.styled';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container>\r\n      <Section title={'Phonebook'}>\r\n        <AddContact />\r\n      </Section>\r\n      <FindContact title={'Find contact by name'} />\r\n      <ContactList />\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}